i) ATM PIN System (3 Attempts)
using System;

class ATMSystem
{
    static void Main()
    {
        int correctPIN = 1234;
        int attempts = 0;
        bool access = false;

        while (attempts < 3)
        {
            Console.Write("Enter PIN: ");
            int enteredPIN = int.Parse(Console.ReadLine());

            if (enteredPIN == correctPIN)
            {
                access = true;
                break;
            }
            else
            {
                Console.WriteLine("Wrong PIN. Try again.");
                attempts++;
            }
        }

        if (access)
            Console.WriteLine("Access Granted");
        else
            Console.WriteLine("Card Blocked");
    }
}
ii) Multiplication Table Generator (With Retry Option)
using System;

class MultiplicationTable
{
    static void Main()
    {
        string choice;

        do
        {
            Console.Write("Enter a number: ");
            int num = int.Parse(Console.ReadLine());

            for (int i = 1; i <= 10; i++)
            {
                Console.WriteLine($"{num} x {i} = {num * i}");
            }

            Console.Write("Try another number? (Y/N): ");
            choice = Console.ReadLine().ToUpper();
        } while (choice == "Y");
    }
}
iii) Electricity Bill Calculator
using System;

class ElectricityBill
{
    static void Main()
    {
        Console.Write("Enter units consumed: ");
        int units = int.Parse(Console.ReadLine());
        int bill = 0;

        if (units <= 100)
            bill = units * 2;
        else if (units <= 200)
            bill = (100 * 2) + (units - 100) * 3;
        else
            bill = (100 * 2) + (100 * 3) + (units - 200) * 5;

        Console.WriteLine("Total bill: â‚¹" + bill);
    }
}
iv) Student Marks Average and Pass/Fail
using System;

class StudentMarks
{
    static void Main()
    {
        int[] marks = new int[5];
        int sum = 0;

        for (int i = 0; i < 5; i++)
        {
            Console.Write("Enter marks for subject " + (i + 1) + ": ");
            marks[i] = int.Parse(Console.ReadLine());
            sum += marks[i];
        }

        float avg = sum / 5f;

        Console.WriteLine("Average: " + avg);

        if (avg >= 40)
            Console.WriteLine("Result: Passed");
        else
            Console.WriteLine("Result: Failed");
    }
}
v) Name Validation for ID Cards
using System;
using System.Text.RegularExpressions;

class NameValidation
{
    static bool IsValidName(string name)
    {
        return Regex.IsMatch(name, @"^[A-Za-z\s]+$");
    }

    static void Main()
    {
        Console.Write("Enter your name: ");
        string name = Console.ReadLine();

        if (IsValidName(name))
            Console.WriteLine("Valid name.");
        else
            Console.WriteLine("Invalid name. No digits or special characters allowed.");
    }
}
